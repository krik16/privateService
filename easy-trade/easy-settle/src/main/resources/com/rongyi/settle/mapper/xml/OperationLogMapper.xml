<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.rongyi.settle.mapper.OperationLogMapper" >
  <resultMap id="BaseResultMap" type="com.rongyi.easy.settle.entity.OperationLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="op_model" property="operationModel" jdbcType="TINYINT" />
    <result column="op_id" property="operationId" jdbcType="INTEGER" />
    <result column="op_type" property="operationType" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, op_model, op_id, op_type, create_user_id, create_at, `desc`, 
    is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from op_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from op_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rongyi.easy.settle.entity.OperationLog" useGeneratedKeys="true" keyProperty="id" >
    insert into op_log (op_model, op_id, op_type, 
      create_user_id, create_at, `desc`, 
      is_delete)
    values (#{operationModel,jdbcType=TINYINT}, #{operationId,jdbcType=INTEGER}, #{operationType,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{desc,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.rongyi.easy.settle.entity.OperationLog" useGeneratedKeys="true" keyProperty="id" >
    insert into op_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      op_model,
      op_id,
      op_type,
      create_user_id,
      create_at,
      `desc`,
      is_delete,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{operationModel,jdbcType=TINYINT},
      #{operationId,jdbcType=INTEGER},
      #{operationType,jdbcType=TINYINT},
      #{createUserId,jdbcType=VARCHAR},
      #{createAt,jdbcType=TIMESTAMP},
      #{desc,jdbcType=VARCHAR},
      #{isDelete,jdbcType=TINYINT},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rongyi.easy.settle.entity.OperationLog" >
    update op_log
    <set >
      <if test="operationModel != null" >
        op_model = #{operationModel,jdbcType=TINYINT},
      </if>
      <if test="operationId != null" >
        op_id = #{operationId,jdbcType=INTEGER},
      </if>
      <if test="operationType != null" >
        op_type = #{operationType,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rongyi.easy.settle.entity.OperationLog" >
    update op_log
    set op_model = #{operationModel,jdbcType=TINYINT},
      op_id = #{operationId,jdbcType=INTEGER},
      op_type = #{operationType,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      `desc` = #{desc,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getOpByMap" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from op_log
    <where>
      <if test="opModel!=null">
        and op_model=#{opModel}
      </if>
      <if test="opType!=null">
        and op_type=#{opType}
      </if>
      <if test="opId!=null">
        and op_id=#{opId}
      </if>
      <if test="id!=null">
        and id=#{id}
      </if>
    </where>
  </select>
</mapper>