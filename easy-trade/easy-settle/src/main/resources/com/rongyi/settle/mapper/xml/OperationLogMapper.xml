<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.OperationLogMapper" >
  <resultMap id="BaseResultMap" type="com.rongyi.easy.settle.entity.OperationLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="operation_model" property="operationModel" jdbcType="TINYINT" />
    <result column="operation_id" property="operationId" jdbcType="INTEGER" />
    <result column="operation_type" property="operationType" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="creade_at" property="creadeAt" jdbcType="TIMESTAMP" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, operation_model, operation_id, operation_type, create_user_id, creade_at, `desc`, 
    is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operation_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rongyi.easy.settle.entity.OperationLog" useGeneratedKeys="true" keyProperty="id" >
    insert into operation_log (operation_model, operation_id, operation_type, 
      create_user_id, creade_at, `desc`, 
      is_delete)
    values (#{operationModel,jdbcType=TINYINT}, #{operationId,jdbcType=INTEGER}, #{operationType,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=VARCHAR}, #{creadeAt,jdbcType=TIMESTAMP}, #{desc,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.rongyi.easy.settle.entity.OperationLog" useGeneratedKeys="true" keyProperty="id" >
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      operation_model,
      operation_id,
      operation_type,
      create_user_id,
      creade_at,
      `desc`,
      is_delete,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{operationModel,jdbcType=TINYINT},
      #{operationId,jdbcType=INTEGER},
      #{operationType,jdbcType=TINYINT},
      #{createUserId,jdbcType=VARCHAR},
      #{creadeAt,jdbcType=TIMESTAMP},
      #{desc,jdbcType=VARCHAR},
      #{isDelete,jdbcType=TINYINT},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rongyi.easy.settle.entity.OperationLog" >
    update operation_log
    <set >
      <if test="operationModel != null" >
        operation_model = #{operationModel,jdbcType=TINYINT},
      </if>
      <if test="operationId != null" >
        operation_id = #{operationId,jdbcType=INTEGER},
      </if>
      <if test="operationType != null" >
        operation_type = #{operationType,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="creadeAt != null" >
        creade_at = #{creadeAt,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rongyi.easy.settle.entity.OperationLog" >
    update operation_log
    set operation_model = #{operationModel,jdbcType=TINYINT},
      operation_id = #{operationId,jdbcType=INTEGER},
      operation_type = #{operationType,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      creade_at = #{creadeAt,jdbcType=TIMESTAMP},
      `desc` = #{desc,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>