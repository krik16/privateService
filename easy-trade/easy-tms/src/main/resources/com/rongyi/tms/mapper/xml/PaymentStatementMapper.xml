<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.rongyi.tms.mapper.PaymentStatementMapper">
	<resultMap id="DtoResultMap"
		type="com.rongyi.easy.settle.dto.PaymentStatementDto">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="TINYINT" />
		<result column="batch_no" property="batchNo" jdbcType="VARCHAR" />
		<result column="biz_type" property="bussinessType" jdbcType="TINYINT" />
		<result column="cycle_start_time" property="cycleStartTime"
			jdbcType="TIMESTAMP" />
		<result column="cycle_end_time" property="cycleEndTime"
			jdbcType="TIMESTAMP" />
		<result column="biz_name" property="bussinessName" jdbcType="VARCHAR" />
		<result column="pay_channel" property="payChannel" jdbcType="TINYINT" />
		<result column="pay_account" property="payAccount" jdbcType="VARCHAR" />
		<result column="pay_name" property="payName" jdbcType="VARCHAR" />
		<result column="blank_name" property="blankName" jdbcType="VARCHAR" />
		<result column="pay_no" property="payNo" jdbcType="VARCHAR" />
		<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
		<result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
		<result column="pay_total" property="payTotal" jdbcType="INTEGER" />
		<result column="biz_email" property="bussinessEmail" jdbcType="VARCHAR" />
		<result column="status_update_time" property="statusUpdateTime"
			jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
		<result column="payment_id" property="paymentId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, config_id, rule_code, cycle_start_time, cycle_end_time,
		`type`,
		batch_no, pay_total,
		`status`, pay_time, pay_no,
		status_update_time, create_at, is_delete
	</sql>
	<select id="selectByPrimaryKey" resultMap="DtoResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_bill
		where id = #{id,jdbcType=INTEGER}
	</select>
	<sql id="list_where_clause">
		and po.trade_type = 7
		<if test="statusList != null and statusList != ''">
			and ps.status in
			<foreach collection="statusList" index="index" item="item"
				open="(" separator="," close=")">
				#{item,jdbcType=TINYINT}
			</foreach>
		</if>
		<if test="status != null and status != ''">
			and ps.status = #{status,jdbcType=TINYINT}
		</if>
		<if test="batchNo != null and batchNo != ''">
			and ps.batch_no = #{batchNo,jdbcType=VARCHAR}
		</if>
		<if test="payNo != null and payNo != ''">
			and ps.pay_no = #{payNo,jdbcType=VARCHAR}
		</if>
		<if test="tradeNo != null and tradeNo != ''">
			and ps.trade_no = #{tradeNo,jdbcType=VARCHAR}
		</if>
		<if test="bussinessType != null and bussinessType != ''">
			and sc.biz_type = #{bussinessType,jdbcType=TINYINT}
		</if>
		<if test="bussinessName != null and bussinessName != ''">
			and sc.biz_name
			like
			concat('%',#{bussinessName,jdbcType=VARCHAR},'%')
		</if>
		<if test="payChannel != null and payChannel != ''">
			and sc.pay_channel = #{payChannel,jdbcType=TINYINT}
		</if>
		<if test="tradeStartTime != null and tradeStartTime != ''">
			and ps.create_at &gt; #{tradeStartTime,jdbcType=TIMESTAMP}
		</if>
		<if test="tradeEndTime != null and tradeEndTime != ''">
			and ps.create_at &lt; #{tradeEndTime,jdbcType=TIMESTAMP}
		</if>
		<if test="payStartTime != null and payStartTime != ''">
			and ps.pay_time &gt; #{payStartTime,jdbcType=TIMESTAMP}
		</if>
		<if test="payStEndTime != null and payStEndTime != ''">
			and ps.pay_time &lt; #{payStEndTime,jdbcType=TIMESTAMP}
		</if>

		<if test="minTotalPrice != null and minTotalPrice != ''">
			AND pay_total &gt;= #{minTotalPrice}*100
		</if>
		<if test="maxTotalPrice != null and maxTotalPrice != ''">
			AND pay_total &lt;= #{maxTotalPrice}*100
		</if>
		<if test="payAccount != null and payAccount != ''">
			and bi.pay_account = #{payAccount,jdbcType=TINYINT}
		</if>
	</sql>

	<select id="selectPageList" resultMap="DtoResultMap"
		parameterType="java.util.Map">
		select
		ps.id,
		ps.type,ps.batch_no,sc.biz_type,ps.cycle_start_time,ps.cycle_end_time,
		sc.biz_name,sc.pay_channel,bi.pay_account,bi.pay_name,bi.blank_name,
		ps.pay_total,bi.biz_email,ps.status_update_time,ps.status,po.create_at,
		ps.pay_no,ps.trade_no,ps.pay_time,
		po.id
		as payment_id
		from payment_bill
		ps
		left join payment_bill_config sc on ps.config_id=sc.id
		left join
		biz_info bi on bi.config_id=sc.id
		left join payment_order po on
		ps.pay_no = po.order_no
		<where>
			<include refid="list_where_clause" />
		</where>
		order by ps.pay_time desc
		<if test="currentPage != null and pageSize != null">
			limit
			#{currentPage,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectPageListCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(ps.id) from payment_bill ps
		join payment_bill_config sc on
		ps.config_id=sc.id
		join biz_info bi on bi.config_id=sc.id
		join
		payment_order po on ps.pay_no = po.order_no
		<where>
			<include refid="list_where_clause" />
		</where>
	</select>

	<update id="updateByNotify" parameterType="java.util.Map">
		update payment_bill
		<set>
			status = #{status,jdbcType=TINYINT},
			pay_time =
			#{payTime,jdbcType=TIMESTAMP},
			status_update_time =
			#{statusUpdateTime,jdbcType=TIMESTAMP},
			trade_no =
			#{tradeNo,jdbcType=VARCHAR}
		</set>
		where pay_no = #{payNo,jdbcType=VARCHAR}
	</update>
	<update id="updateByOffPay" parameterType="java.util.Map">
		update payment_bill
		<set>
			status = #{status,jdbcType=TINYINT},
			trade_no =
			#{tradeNo,jdbcType=VARCHAR},
			pay_time = #{payTime,jdbcType=TIMESTAMP},
			status_update_time = #{statusUpdateTime,jdbcType=TIMESTAMP},
		</set>
		where id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<select id="validatePay" resultMap="DtoResultMap" parameterType="java.util.Map">
		select
		ps.id,
		ps.type,ps.batch_no,sc.biz_type,ps.cycle_start_time,ps.cycle_end_time,
		sc.biz_name,sc.pay_channel,bi.pay_account,bi.pay_name,bi.blank_name,
		ps.pay_total,bi.biz_email,ps.status_update_time,ps.status,ps.create_at,
		ps.pay_no,ps.trade_no,ps.pay_time
		from payment_bill
		ps
		left join
		payment_bill_config sc on ps.config_id=sc.id
		left join biz_info bi on
		bi.config_id=sc.id
		left join payment_order po
		on po.order_no = ps.pay_no
		where po.id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
</mapper>
