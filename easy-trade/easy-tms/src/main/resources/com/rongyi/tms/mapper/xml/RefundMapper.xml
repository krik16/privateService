<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.rongyi.tms.mapper.xml.RefundMapper">
    <resultMap id="BaseResultMap" type="com.rongyi.easy.tms.vo.TradeVO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_time" property="orderTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="draw_user_id" property="drawUserId" jdbcType="VARCHAR"/>
        <result column="order_price" property="orderPrice" jdbcType="DECIMAL"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="pay_no" property="payNo" jdbcType="VARCHAR"/>
        <result column="shop_id" property="shopId" jdbcType="VARCHAR"/>
        <result column="shop_name" property="shopName" jdbcType="VARCHAR"/>
        <result column="mall_id" property="mallId" jdbcType="VARCHAR"/>
        <result column="mall_name" property="mallName" jdbcType="VARCHAR"/>
        <result column="buyer_id" property="buyerId" jdbcType="VARCHAR"/>
        <result column="seller_account" property="sellerAccount"
                jdbcType="VARCHAR"/>
        <result column="seller_name" property="sellerName" jdbcType="VARCHAR"/>
        <result column="trade_type" property="tradeType" jdbcType="VARCHAR"/>
        <result column="pay_channel" property="payChannel" jdbcType="INTEGER"/>
        <result column="order_type" property="orderType" jdbcType="INTEGER"/>
        <result column="coupon_buyer_id" property="couponBuyerId"
                jdbcType="VARCHAR"/>
        <result column="buyer_account" property="buyerAccount"
                jdbcType="VARCHAR"/>
        <result column="refund_rejected" property="refundRejected"
                jdbcType="VARCHAR"/>
        <result column="guide_type" property="guideType" jdbcType="INTEGER"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="op_time" property="opTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        `ry_rpb`.`payment_order`.`id` AS `id`,`ry_rpb`.`payment_order`.`create_at` AS
        `order_time`,`ry_rpb`.`payment_order`.`status` AS `status`,`ry_rpb`.`payment_order`.`draw_user_id` AS
        `draw_user_id`,`ry_rpb`.`payment_order`.`pay_amount` AS `order_price`,`ry_rpb`.`payment_order`.`order_no` AS
        `order_no`,`ry_rpb`.`payment_order`.`order_type` AS `order_type`,`ry_rpb`.`payment_order`.`pay_no` AS
        `pay_no`,`ry_rpb`.`payment_order`.`trade_type` AS `trade_type`,`ry_rpb`.`payment_order`.`pay_channel` AS
        `pay_channel`,`ry_rpb`.`payment_order`.`refund_rejected` AS `refund_rejected`,`ry_rmmm`.`shop_info`.`id` AS
        `shop_id`,`ry_rmmm`.`shop_info`.`shop_name` AS `shop_name`,`ry_rmmm`.`mall_cooperate`.`id` AS
        `mail_id`,`ry_rmmm`.`mall_cooperate`.`mall_name` AS `mall_name`,
        `ry_rmmm`.`rmmm_user_info`.`user_phone` AS `seller_account`,`ry_rmmm`.`rmmm_user_info`.`user_name` AS
        `seller_name`,
        `ry_osm`.`order_form`.`guide_type` AS `guide_type`,op.op_time,
        CASE WHEN
        `ry_rpb`.`payment_order`.order_type = 1
        THEN
        buyer_info.phone
        else
        buyer_info2.phone
        END as buyer_account,
        CASE WHEN
        `ry_rpb`.`payment_order`.order_type = 1
        THEN
        buyer_info.nick_name
        else
        buyer_info2.nick_name
        END as buyer_name
    </sql>
    <sql id="Base_From">
        `ry_rpb`.`payment_order` left join `ry_osm`.`order_form` on`ry_osm`.`order_form`.`order_no` =
        `ry_rpb`.`payment_order`.`order_no` left join `ry_rmmm`.`shop_info` on`ry_rmmm`.`shop_info`.`id` =
        `ry_osm`.`order_form`.`weidian_id` left join `ry_rmmm`.`mall_cooperate` on`ry_rmmm`.`mall_cooperate`.`id` =
        `ry_rmmm`.`shop_info`.`mall_id` left join `ry_rmmm`.`rmmm_user_info` on `ry_rmmm`.`rmmm_user_info`.`id` =
        `ry_rpb`.`payment_order`.`draw_user_id` left join `ry_trade`.`trade_order`
        on `ry_rpb`.`payment_order`.`order_no` = `ry_trade`.`trade_order`.`order_no`
        left join ry_user.malllife_user_info buyer_info on buyer_info.id = `ry_trade`.`trade_order`.`user_id`
        left join ry_user.malllife_user_info  buyer_info2 on buyer_info2.id = `ry_osm`.`order_form`.`buyer_id`
        left join payment_order_op op on op.payment_id = payment_order.id
    </sql>
    <sql id="trade_list_where_clause">

        ((`ry_rpb`.`payment_order`.`status` = 0) and ((`ry_rpb`.`payment_order`.`trade_type` = 1) or
        (`ry_rpb`.`payment_order`.`trade_type` = 4) or (`ry_rpb`.`payment_order`.`trade_type` = 6)))
        <!-- 付款单号 -->
        <if test="payNo != null and payNo != ''">
            AND payment_order.pay_no = #{payNo}
        </if>
        <!-- 订单号 -->
        <if test="orderNo != null and orderNo != ''">
            AND payment_order.order_no = #{orderNo}
        </if>
        <!-- 商场名称 -->
        <if test="mallName != null and mallName != ''">
            AND mall_cooperate.mall_name like
            concat('%',#{mallName,jdbcType=VARCHAR},'%')
        </if>
        <!-- 店铺名称 -->
        <if test="shopName != null and shopName != ''">
            AND shop_info.shop_name like
            concat('%',#{shopName,jdbcType=VARCHAR},'%')
        </if>
        <!-- 街边店铺id -->
        <if test="curbshopId != null and curbshopId != ''">
            AND shop_info.shop_mid = #{curbshopId}
        </if>

        <!--买家账号-->
        <if test="buyerAccount != null and buyerAccount != ''">
            AND buyer_info.phone = #{buyerAccount}
        </if>
        <!--买家姓名-->
        <if test="buyerName != null and buyerName != ''">
            AND buyer_info.nike_name like
            concat('%',#{buyerName,jdbcType=VARCHAR},'%')
        </if>

        <!-- 卖家姓名 -->
        <if test="sellerName != null and sellerName != ''">
            AND rmmm_user_info.user_name like
            concat('%',#{sellerName,jdbcType=VARCHAR},'%')
        </if>
        <!-- 状态 -->
        <if test="status != null and status != ''">
            AND payment_order.status = #{status}
        </if>

        <!-- 交易类型 -->
        <if test="tradeType != null and tradeType == 1">
            AND (payment_order.trade_type = 1 OR payment_order.trade_type = 6)
        </if>
        <if test="tradeType != null and tradeType != 1">
            AND payment_order.trade_type = #{tradeType}
        </if>
        <!-- 付款方式 -->
        <if test="payChannel != null and payChannel != ''">
            AND payment_order.pay_channel = #{payChannel}
        </if>

        <!-- 提现申请时间 -->
        <if test="tradeStartTime != null and tradeStartTime != ''">
            AND payment_order.create_at >= #{tradeStartTime}
        </if>
        <if test="tradeEndTime != null and tradeEndTime != ''">
            AND #{tradeEndTime} >= payment_order.create_at
        </if>
        <!-- 交易金额 -->
        <if test="minTotalPrice != null and minTotalPrice != ''">
            AND payment_order.pay_amount >= #{minTotalPrice}
        </if>
        <if test="maxTotalPrice != null and maxTotalPrice != ''">
            AND #{maxTotalPrice} >= payment_order.pay_amount
        </if>
        <!-- 渠道 -->
        <if test="guideType != null and guideType != ''">
            AND order_form.guide_type = #{guideType}
        </if>

    </sql>
    <select id="selectPayPageList" resultMap="BaseResultMap"
            parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Base_From"/>
        <where>
            <include refid="trade_list_where_clause"/>
        </where>
        group by payment_order.id
        <if test="orderby != null">
            order by ${orderby} ${orderVa}
        </if>

        <if test="orderby == null">
            order by order_time desc
        </if>

        limit #{currentPage,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>
    <select id="selectPayPageListCount" parameterType="java.util.Map"
            resultType="java.lang.Integer">
        select count(total.id) from (select payment_order.id from
        <include refid="Base_From"/>
        <where>
            <include refid="trade_list_where_clause"/>
        </where>
        group by payment_order.id
        ) as total
    </select>

</mapper>