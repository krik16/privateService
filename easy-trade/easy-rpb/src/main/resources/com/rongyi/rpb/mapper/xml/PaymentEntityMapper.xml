<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rongyi.rpb.mapper.PaymentEntityMapper">

	<resultMap id="BaseResultMap" type="com.rongyi.easy.rpb.domain.PaymentEntity">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNum" jdbcType="VARCHAR" />
		<result column="order_type" property="orderType" jdbcType="INTEGER" />
		<result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
		<result column="pay_no" property="payNo" jdbcType="VARCHAR" />
		<result column="pay_amount" property="amountMoney" jdbcType="DOUBLE" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="trade_type" property="tradeType" jdbcType="INTEGER" />
		<result column="create_at" property="createTime" jdbcType="TIMESTAMP" />
		<result column="end_at" property="finishTime" jdbcType="TIMESTAMP" />
		<result column="pay_channel" property="payChannel" jdbcType="INTEGER" />
		<result column="out_account" property="outAccount" jdbcType="VARCHAR" />
		<result column="in_account" property="inAccount" jdbcType="VARCHAR" />
		<result column="order_title" property="title" jdbcType="VARCHAR" />
		<result column="shop_id" property="showNum" jdbcType="INTEGER" />
		<result column="draw_user_id" property="drawUserId" jdbcType="VARCHAR" />
		<result column="pay_name" property="payName" jdbcType="VARCHAR" />
		<result column="batch_no" property="batchNo" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, order_no,order_type,order_price,pay_no,pay_amount,
		status,trade_type,create_at,
		end_at,pay_channel,out_account,in_account,order_title,shop_id,draw_user_id,pay_name,batch_no
	</sql>

	<insert id="insert" parameterType="com.rongyi.easy.rpb.domain.PaymentEntity"
		useGeneratedKeys="true" keyProperty="id">

		insert into payment_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="payNo != null">
				pay_no,
			</if>
			<if test="orderNum != null">
				order_no,
			</if>
			<if test="orderType != null">
				order_type,
			</if>
			<if test="orderPrice != null">
				order_price,
			</if>
			<if test="amountMoney != null">
				pay_amount,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="tradeType != null">
				trade_type,
			</if>
			<if test="createTime != null">
				create_at,
			</if>
			<if test="finishTime != null">
				end_at,
			</if>
			<if test="payChannel != null">
				pay_channel,
			</if>
			<if test="outAccount != null">
				out_account,
			</if>
			<if test="inAccount != null">
				in_account,
			</if>
			<if test="title != null">
				order_title,
			</if>
			<if test="showNum != null">
				shop_id,
			</if>
			<if test="drawUserId != null">
				draw_user_id,
			</if>
			<if test="payName != null">
				pay_name,
			</if>
			<if test="batchNo != null">
				batch_no
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="payNo != null">
				#{payNo,jdbcType=VARCHAR},
			</if>
			<if test="orderNum != null">
				#{orderNum,jdbcType=VARCHAR},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=INTEGER},
			</if>
			<if test="orderPrice != null">
				#{orderPrice,jdbcType=VARCHAR},
			</if>
			<if test="amountMoney != null">
				#{amountMoney,jdbcType=DOUBLE},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="tradeType != null">
				#{tradeType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="finishTime != null">
				#{finishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payChannel != null">
				#{payChannel,jdbcType=INTEGER},
			</if>
			<if test="outAccount != null">
				#{outAccount,jdbcType=VARCHAR},
			</if>
			<if test="inAccount != null">
				#{inAccount,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=INTEGER},
			</if>
			<if test="showNum != null">
				#{showNum,jdbcType=INTEGER},
			</if>
			<if test="drawUserId != null">
				#{drawUserId,jdbcType=VARCHAR},
			</if>
			<if test="payName != null">
				#{payName,jdbcType=VARCHAR},
			</if>
			<if test="batchNo != null">
				#{batchNo,jdbcType=VARCHAR}
			</if>

		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.rongyi.easy.rpb.domain.PaymentEntity">
		update payment_order
		<set>
			<if test="payNo != null">
				pay_no = #{payNo,jdbcType=VARCHAR},
			</if>
			<if test="orderNum != null">
				order_no = #{orderNum,jdbcType=VARCHAR},
			</if>
			<if test="orderType != null">
				order_type = #{orderType,jdbcType=INTEGER},
			</if>
			<if test="orderPrice != null">
				order_price = #{orderPrice,jdbcType=VARCHAR},
			</if>
			<if test="amountMoney != null">
				pay_amount = #{amountMoney,jdbcType=DECIMAL},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="tradeType != null">
				trade_type = #{tradeType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_at = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="finishTime != null">
				end_at = #{finishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payChannel != null">
				pay_channel = #{payChannel,jdbcType=INTEGER},
			</if>
			<if test="outAccount != null">
				out_account = #{outAccount,jdbcType=VARCHAR},
			</if>
			<if test="inAccount != null">
				in_account = #{inAccount,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				order_title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="drawUserId != null">
				draw_user_id = #{drawUserId,jdbcType=VARCHAR},
			</if>
			<if test="payName != null">
				pay_name = #{payName,jdbcType=VARCHAR},
			</if>
			<if test="batchNo != null">
				batch_no = #{batchNo,jdbcType=VARCHAR}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateListStatusByPayNo" parameterType="com.rongyi.easy.rpb.domain.PaymentEntity">
		update payment_order
		<set>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="finishTime != null">
				end_at = #{finishTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where pay_no = #{payNo,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.rongyi.easy.rpb.domain.PaymentEntity">
		update
		payment_order
		set pay_no = #{payNo,jdbcType=VARCHAR},
		set order_no =
		#{orderNum,jdbcType=VARCHAR},
		set order_type =
		#{orderType,jdbcType=INTEGER},
		set order_price =
		#{orderPrice,jdbcType=VARCHAR},
		pay_amount =
		#{amountMoney,jdbcType=DECIMAL},
		status = #{status,jdbcType=INTEGER},
		trade_type = #{tradeType,jdbcType=INTEGER},
		create_at =
		#{createTime,jdbcType=TIMESTAMP},
		end_at =
		#{finishTime,jdbcType=TIMESTAMP},
		pay_channel =
		#{payChannel,jdbcType=INTEGER},
		out_account =
		#{outAccount,jdbcType=VARCHAR},
		in_account =
		#{inAccount,jdbcType=VARCHAR},
		order_title =#{title,jdbcType=VARCHAR},
		draw_user_id =#{drawUserId,jdbcType=VARCHAR},
		pay_name
		=#{payName,jdbcType=VARCHAR}
		batch_no
		=#{batchNo,jdbcType=VARCHAR}
		where
		id =
		#{id,jdbcType=INTEGER}
	</update>


	<sql id="list_where_clause">
		and status is not null
		<if test="payNo != null and payNo != ''">
			and pay_no like CONCAT('%',#{payNo},'%')
		</if>
		<if test="orderNum != null and orderNum != ''">
			and order_no like CONCAT('%',#{orderNum},'%')
		</if>
		<if test="status != null and status != ''">
			and status like CONCAT('%',#{status},'%')
		</if>
		<if test="tradeType != null and tradeType != ''">
			and trade_type like CONCAT('%',#{tradeType},'%')
		</if>
	</sql>

	<select id="selectPageListBySearch" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from payment_order
		<where>
			<include refid="list_where_clause" />
		</where>
		order by status ASC,trade_type DESC,create_at DESC
		limit
		#{currentPage,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>

	<select id="selectPageListCountBySearch" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select
		count(id)
		from payment_order
		<where>
			<include refid="list_where_clause" />
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectByPayNoAndTradeType" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where pay_no = #{payNo,jdbcType=VARCHAR}
		<if test="tradeType != null and tradeType != ''">
			and trade_type = #{tradeType,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectByPayNo" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where pay_no = #{payNo,jdbcType=VARCHAR}
	</select>
	<select id="selectByOrderNum" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where order_no = #{orderNum,jdbcType=VARCHAR}
		<if test="tradeType != null and tradeType != ''">
			and trade_type = #{tradeType,jdbcType=INTEGER}
		</if>

	</select>
	<select id="selectByOrderNumAndTradeType" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where order_no = #{orderNum,jdbcType=VARCHAR}
		<if test="tradeType != null and tradeType != ''">
		 and trade_type = #{tradeType,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and status =#{status,jdbcType=INTEGER}
		</if>
		<if test="payChannel != null">
			and pay_channel =#{payChannel,jdbcType=INTEGER}
		</if>
		
	</select>

	<delete id="deleteByPayNo" parameterType="java.lang.String">
		delete from
		payment_order where pay_no = #{payNo,jdbcType=VARCHAR}
	</delete>

	<select id="selectByOrderNumAndBatchNo" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where order_no = #{orderNum,jdbcType=VARCHAR}
		and batch_no = #{batchNo,jdbcType=VARCHAR}
	</select>
	<select id="selectByPayNoAndPayChannelAndTradeType" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where pay_no = #{payNo,jdbcType=VARCHAR}
		<if test="payChannel != null">
			and pay_channel = #{payChannel,jdbcType=INTEGER}
		</if>
		and trade_type = #{tradeType,jdbcType=INTEGER}
		and status =
		#{status,jdbcType=INTEGER}
	</select>
	<select id="selectByBatchNoAndStatus" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from payment_order
		where batch_no = #{batchNo,jdbcType=VARCHAR}
		and
		status = #{status,jdbcType=INTEGER}
	</select>
</mapper>