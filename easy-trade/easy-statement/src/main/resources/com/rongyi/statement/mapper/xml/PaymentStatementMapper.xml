<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.PaymentStatementMapper" >
  <resultMap id="BaseResultMap" type="com.rongyi.easy.statement.entity.PaymentStatement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="config_id" property="configId" jdbcType="INTEGER" />
    <result column="rule_code" property="ruleCode" jdbcType="VARCHAR" />
    <result column="cycle_start_time" property="cycleStartTime" jdbcType="TIMESTAMP" />
    <result column="cycle_end_time" property="cycleEndTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="batch_no" property="batchNo" jdbcType="VARCHAR" />
    <result column="pay_total" property="payTotal" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_no" property="payNo" jdbcType="VARCHAR" />
    <result column="status_update_time" property="statusUpdateTime" jdbcType="TIMESTAMP" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, config_id, rule_code, cycle_start_time, cycle_end_time, `type`, batch_no, pay_total, 
    `status`, pay_time, pay_no, status_update_time, create_at, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payment_statement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payment_statement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rongyi.easy.statement.entity.PaymentStatement" useGeneratedKeys="true" keyProperty="id" >
    insert into payment_statement (config_id, rule_code, cycle_start_time, 
      cycle_end_time, `type`, batch_no, 
      pay_total, `status`, pay_time, 
      pay_no, status_update_time, create_at, 
      is_delete)
    values (#{configId,jdbcType=INTEGER}, #{ruleCode,jdbcType=VARCHAR}, #{cycleStartTime,jdbcType=TIMESTAMP}, 
      #{cycleEndTime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{batchNo,jdbcType=VARCHAR}, 
      #{payTotal,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{payTime,jdbcType=TIMESTAMP}, 
      #{payNo,jdbcType=VARCHAR}, #{statusUpdateTime,jdbcType=TIMESTAMP}, #{createAt,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.rongyi.easy.statement.entity.PaymentStatement" useGeneratedKeys="true" keyProperty="id" >
    insert into payment_statement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      config_id,
      rule_code,
      cycle_start_time,
      cycle_end_time,
      `type`,
      batch_no,
      pay_total,
      `status`,
      pay_time,
      pay_no,
      status_update_time,
      create_at,
      is_delete,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{configId,jdbcType=INTEGER},
      #{ruleCode,jdbcType=VARCHAR},
      #{cycleStartTime,jdbcType=TIMESTAMP},
      #{cycleEndTime,jdbcType=TIMESTAMP},
      #{type,jdbcType=TINYINT},
      #{batchNo,jdbcType=VARCHAR},
      #{payTotal,jdbcType=INTEGER},
      #{status,jdbcType=TINYINT},
      #{payTime,jdbcType=TIMESTAMP},
      #{payNo,jdbcType=VARCHAR},
      #{statusUpdateTime,jdbcType=TIMESTAMP},
      #{createAt,jdbcType=TIMESTAMP},
      #{isDelete,jdbcType=TINYINT},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rongyi.easy.statement.entity.PaymentStatement" >
    update payment_statement
    <set >
      <if test="configId != null" >
        config_id = #{configId,jdbcType=INTEGER},
      </if>
      <if test="ruleCode != null" >
        rule_code = #{ruleCode,jdbcType=VARCHAR},
      </if>
      <if test="cycleStartTime != null" >
        cycle_start_time = #{cycleStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cycleEndTime != null" >
        cycle_end_time = #{cycleEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="batchNo != null" >
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="payTotal != null" >
        pay_total = #{payTotal,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payNo != null" >
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="statusUpdateTime != null" >
        status_update_time = #{statusUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rongyi.easy.statement.entity.PaymentStatement" >
    update payment_statement
    set config_id = #{configId,jdbcType=INTEGER},
      rule_code = #{ruleCode,jdbcType=VARCHAR},
      cycle_start_time = #{cycleStartTime,jdbcType=TIMESTAMP},
      cycle_end_time = #{cycleEndTime,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=TINYINT},
      batch_no = #{batchNo,jdbcType=VARCHAR},
      pay_total = #{payTotal,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_no = #{payNo,jdbcType=VARCHAR},
      status_update_time = #{statusUpdateTime,jdbcType=TIMESTAMP},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>