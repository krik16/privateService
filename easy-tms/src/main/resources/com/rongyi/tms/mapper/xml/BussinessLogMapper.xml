<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.rongyi.tms.mapper.xml.BussinessLogMapper" >
  <resultMap id="BaseResultMap" type="com.rongyi.easy.tms.entity.BussinessLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bussiness_id" property="bussinessId" jdbcType="INTEGER" />
    <result column="bussiness_type" property="bussinessType" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.rongyi.easy.tms.entity.BussinessLog" extends="BaseResultMap" >
    <result column="memo" property="memo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, bussiness_id, bussiness_type, username, create_at, deleted
  </sql>
  <sql id="Blob_Column_List" >
    memo
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bussiness_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bussiness_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rongyi.easy.tms.entity.BussinessLog" useGeneratedKeys="true" keyProperty="id" >
    insert into bussiness_log (bussiness_id, bussiness_type, username, 
      create_at, deleted, memo
      )
    values (#{bussinessId,jdbcType=INTEGER}, #{bussinessType,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, #{memo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rongyi.easy.tms.entity.BussinessLog" useGeneratedKeys="true" keyProperty="id" >
    insert into bussiness_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      bussiness_id,
      bussiness_type,
      username,
      create_at,
      deleted,
      memo,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{bussinessId,jdbcType=INTEGER},
      #{bussinessType,jdbcType=INTEGER},
      #{username,jdbcType=VARCHAR},
      #{createAt,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=INTEGER},
      #{memo,jdbcType=LONGVARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rongyi.easy.tms.entity.BussinessLog" >
    update bussiness_log
    <set >
      <if test="bussinessId != null" >
        bussiness_id = #{bussinessId,jdbcType=INTEGER},
      </if>
      <if test="bussinessType != null" >
        bussiness_type = #{bussinessType,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rongyi.easy.tms.entity.BussinessLog" >
    update bussiness_log
    set bussiness_id = #{bussinessId,jdbcType=INTEGER},
      bussiness_type = #{bussinessType,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rongyi.easy.tms.entity.BussinessLog" >
    update bussiness_log
    set bussiness_id = #{bussinessId,jdbcType=INTEGER},
      bussiness_type = #{bussinessType,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByBussinessIdAndType" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bussiness_log
    where bussiness_id = #{bussinessId,jdbcType=INTEGER}
    and bussiness_type = #{bussinessType,jdbcType=INTEGER}
  </select>
  
</mapper>